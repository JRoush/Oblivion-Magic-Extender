Effect Item
===========
There is no isolated method in the CS for allocating new effect items.  Because they seem like something many
3rd party plugins will want to create, it is important that OBME::EffectItem be the same size as ::EffectItem.
New fields are added to the 'ScriptInfo' structure instead.  This has two major implications:
    -   the scriptInfo block can't be constructed by 3rd party plugins.  This will require a manual patch to
        the obse script commands AddEffectItem,CopyEffectItem, (possibly RemoveEffectItem?)
    -   most effect items will now have an attached extra object, increasing their size by a factor of ~3.
        There are about 5500 effect items in Oblivion.esm, so the increase from 36 bytes to ~110 bytes will use an extra ~400k of memory
Fields:
+	EffectCode
+	Magnitude
+	Duration
+	Area
+	Range
+   ActorValue - for ValueModifierEffects with the UseSkill or UseAttribute flags.  
    Still used for thtis, but all other handler-specific data is stored in the EffectHandler object
+	EffectItemExtra, aka "ScriptEffectInfo" - overrides for properties of effect settings:
    +	ScriptFormID - for ScriptEffects. 
        Still used for thtis, but all other handler-specific data is stored in the EffectHandler object
    +	School
    +	Name - include a flag (RSH) indicating that this overrides *entire* description, not just name.
    +	VFXcode - mgefCode of magic effect from which to steal visual (perhaps audio & 3D) effects
    +	Hostile - boolean value, only lowest 8 bits of this word are initialized,saved,and loaded
    +   Flags(RSH) - remaining mgef+obme flags (other than hostile) might be overridden (may require more than 32 bits)
        +   FLAG: Spellmaking, Enchanting, Alchemy: flags to prevent effect from being know to player in alters or alchemy menu  
                use the Alchemy flag to mimic the defautl behavior of ingredient effects at low skill levels
                along with magic item flag to mask name/icon at low skill levels
    +   OverrideMask(RSH) - bitmask of overriden mgefFlags, ObmeFlags, and overriden fields (may require more than 32 bits)   
    +   BaseCost(RSH) - override base magicka cost for parent effect in autocalc
    +   Icon(RSH)
    +   ResistAV(RSH)
    +   OverallCost(RSH) - overrides autocalc cost for single effect item    
    +   ParentForm(RSH) - magic item / sigil stone to which this item belongs
    +   EffectHandler(RSH):  pointer to EffectHandler structure that stores handler specific data & overrides.  manages CS subdialogs and in-game menus
    +   Projectile Range(RSH) - projectile range (in feet).  used only if NoMaxRange flag is false
+	MagickaCost(cached) - set to -1.0 when cache is invalidated

File Format Notes:
==================
+	items for unrecognized effects are ignored.  
+   Even if a EffectItemList has no effects left, it is still loaded, but will cause a CTD if added to actor (just player?)
+   bad EFITs cause problems since they disrupt the indexing of effect items in the magic item (see notes on Active Effects).
+	extra SCIT blocks are ignored, but missing SCIT blocks corrupt the following data.  Always give SEFF an SCIT block. FULL name override is optional
+   a seperator chunk is necessary at end of effect list
+   provide version info for every effect item ?  needed for v1, since the effect item chunks had variable formats.  try to avoid this in v2 by using 
    a seperate handler-specific chunk